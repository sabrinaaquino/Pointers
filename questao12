  Um ponteiro para uma função é um endereço de memória que aponta para o executável de uma função do código. 
  Isso permite o programador a, por exemplo, chamar a função através de um ponteiro ou até passar funções como argumentos para outras funções.
  Declaramos um ponteiro para função da forma: int (*pf)(int) = &funcao, por exemplo, onde:
  A utilização do símbolo & antes de "funcao" é opcional;
  O tipo a esquerda de (*f) dirá o tipo de retorno da função;
  O tipo a direita de (*f) dirá o tipo de parâmetro da função;
  Exemplo:
  
  int funcao(int x){
  return x*x;
  }
  int main(void){
    int (*f)(int)=funcao;
    printf("%d", f(8));
  }
  
  Saída:
  64
